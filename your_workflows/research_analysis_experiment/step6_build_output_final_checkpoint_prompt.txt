## Goal: Generate markdown output, implement Checkpoint 3

Your task is to guide the user through building the output generation component that transforms analyses into a structured use case document, then implements the final blocking checkpoint for approval.

### Why This Matters
This is the final step of the workflow - transforming raw AI analyses into a polished, investor-ready document that industry partners can use for decision-making. Checkpoint 3 ensures nothing goes out without human approval.

---

## Phase 1: Design Output Document Structure

### 1. Define the use case document format
Create a structured markdown template:

**Use Case Document Template:**
```markdown
# Research Use Case Analysis

**Analysis Date:** {{ date }}
**Analyst:** {{ user_name }}
**Search Query:** {{ original_query }}

---

## Executive Summary

{{ 2-3 sentence overview of findings }}

**Key Recommendation:** {{ Pursue / Consider / Pass }} - {{ 1 sentence justification }}

---

## Papers Analyzed

{{ For each paper }}

### {{ paper_number }}. {{ paper_title }}

**Authors:** {{ authors }}
**Published:** {{ date }}
**Source:** {{ arXiv / Semantic Scholar }}
**PDF:** [Link]({{ pdf_url }})

---

## Technical Analysis

### Problem Addressed
{{ problem_addressed }}

### Methodology
{{ methodology_description }}

### Key Results
{{ results_with_metrics }}

### Technical Feasibility
{{ technical_feasibility_assessment }}

- **Implementation Complexity:** {{ complexity_rating }}
- **Infrastructure Requirements:** {{ infrastructure_needs }}
- **Available Resources:** {{ open_source_availability }}

### Scalability
{{ scalability_assessment }}

### Limitations & Risks
{{ limitations_and_risks }}

---

## Commercial Feasibility Analysis

### Problem-Solution Fit
{{ problem_solution_fit_assessment }}

**Target Customers:** {{ customer_description }}

### Market Opportunity

- **TAM (Total Addressable Market):** {{ tam_estimate }}
- **SAM (Serviceable Addressable Market):** {{ sam_estimate }}
- **SOM (Serviceable Obtainable Market):** {{ som_estimate }}

**Market Sizing Rationale:** {{ reasoning }}

### Development Cost Estimate

**MVP Development:**
- Team: {{ team_composition }}
- Timeline: {{ timeline_estimate }}
- Estimated Cost: {{ cost_range }}

**Breakdown:**
- Engineering: {{ cost }}
- Infrastructure: {{ cost }}
- Data Acquisition: {{ cost }}
- Regulatory/Compliance: {{ cost }}

### Regulatory Considerations
{{ regulatory_assessment }}

### Go-to-Market Challenges
{{ gtm_challenges }}

### Commercial Viability Score
- **Technical Readiness:** {{ score }}/10
- **Market Need:** {{ score }}/10
- **Competitive Advantage:** {{ score }}/10
- **Overall Viability:** {{ overall_score }}/10

**Assessment:** {{ 2-3 sentence summary judgment }}

---

{{ End for each paper }}

## Consolidated Insights

{{ If multiple papers were analyzed }}

### Cross-Paper Patterns
{{ common_themes_or_patterns }}

### Comparative Analysis
{{ comparison_of_approaches }}

### Recommended Approach
{{ which_paper_or_combination_is_best }}

---

## Final Recommendation

**Recommendation:** {{ Pursue / Consider with Conditions / Pass }}

**Reasoning:**
{{ 3-5 bullet points justifying the recommendation }}

**Next Steps if Pursuing:**
1. {{ actionable_next_step }}
2. {{ actionable_next_step }}
3. {{ actionable_next_step }}

**Risk Mitigation:**
- {{ key_risk }}: {{ mitigation_strategy }}

---

## Appendix

### Analysis Methodology
This analysis was generated using an AI-assisted research workflow with human validation checkpoints.

### Confidence Level
{{ High / Medium / Low }} - {{ reasoning }}

### Additional Resources
- {{ links_to_related_research }}
- {{ relevant_market_reports }}
- {{ competitor_analysis_links }}

---

*Generated by Research Analysis Workflow - {{ timestamp }}*
```

**Why this matters:** A well-structured document is immediately useful and professional, increasing the value of your workflow.

---

## Phase 2: Build Output Generator in n8n

### 2. Create the markdown generation workflow
Build n8n component to transform analysis JSON into markdown:

**Workflow Component:**
1. **Input:** Approved analyses from Checkpoint 2 (Step 5)
2. **Code** node (generate markdown):
   ```javascript
   const analyses = $input.all();
   const originalQuery = $node["Manual Trigger"].json.search_query;
   const date = new Date().toISOString().split('T')[0];

   // Generate executive summary
   const avgViability = analyses.reduce((sum, a) =>
     sum + a.json.commercial_analysis.commercial_viability_score, 0
   ) / analyses.length;

   const recommendation = avgViability >= 7 ? "Pursue" :
                          avgViability >= 5 ? "Consider" : "Pass";

   // Build markdown document
   let markdown = `# Research Use Case Analysis\n\n`;
   markdown += `**Analysis Date:** ${date}\n`;
   markdown += `**Search Query:** ${originalQuery}\n\n`;
   markdown += `---\n\n## Executive Summary\n\n`;
   markdown += `Analyzed ${analyses.length} research papers on ${originalQuery}. `;
   markdown += `Average commercial viability score: ${avgViability.toFixed(1)}/10.\n\n`;
   markdown += `**Key Recommendation:** ${recommendation}\n\n`;
   markdown += `---\n\n## Papers Analyzed\n\n`;

   // For each paper
   analyses.forEach((paper, i) => {
     const p = paper.json;
     markdown += `### ${i+1}. ${p.paper_title}\n\n`;
     markdown += `**Authors:** ${p.authors}\n`;
     markdown += `**Published:** ${p.published}\n`;
     markdown += `**PDF:** [Link](${p.pdf_url})\n\n`;

     markdown += `## Technical Analysis\n\n`;
     markdown += `### Problem Addressed\n${p.technical_analysis.problem_addressed}\n\n`;
     markdown += `### Methodology\n${p.technical_analysis.methodology}\n\n`;
     markdown += `### Key Results\n${p.technical_analysis.results}\n\n`;
     markdown += `### Technical Feasibility\n${p.technical_analysis.technical_feasibility}\n\n`;
     markdown += `### Scalability\n${p.technical_analysis.scalability}\n\n`;
     markdown += `### Limitations\n${p.technical_analysis.limitations}\n\n`;

     markdown += `## Commercial Feasibility Analysis\n\n`;
     markdown += `### Problem-Solution Fit\n${p.commercial_analysis.problem_solution_fit}\n\n`;
     markdown += `### Market Opportunity\n${p.commercial_analysis.market_opportunity}\n\n`;
     markdown += `### Development Cost\n${p.commercial_analysis.development_cost}\n\n`;
     markdown += `### Regulatory Considerations\n${p.commercial_analysis.regulatory}\n\n`;
     markdown += `### Commercial Viability Score: ${p.commercial_analysis.commercial_viability_score}/10\n\n`;
     markdown += `---\n\n`;
   });

   markdown += `## Final Recommendation\n\n`;
   markdown += `**Recommendation:** ${recommendation}\n\n`;
   markdown += `*Generated by Research Analysis Workflow - ${new Date().toISOString()}*\n`;

   return { markdown: markdown };
   ```

3. **Output:** Markdown string in `{{ $json.markdown }}`

**Why this matters:** Automated document generation saves hours of manual work and ensures consistency.

---

## Phase 3: Implement Checkpoint 3 - Final Approval

### 3. Add the final blocking checkpoint
Using the checkpoint pattern from Step 2:

**Set** node (prepare checkpoint data):
- `checkpoint_name` = "Checkpoint 3: Final Document Approval"
- `document_preview` = `{{ $json.markdown.substring(0, 1000) }}...` (first 1000 chars)
- `full_document` = `{{ $json.markdown }}`

**Wait** node:
- Resume: "On webhook call"

**Create approval interface:**
```html
<h2>Checkpoint 3: Final Document Approval</h2>

<div style="border: 1px solid #ccc; padding: 20px; background: #f9f9f9;">
  <h3>Document Preview</h3>
  <pre style="white-space: pre-wrap; font-size: 12px;">{{ document_preview }}</pre>
  <p><a href="#" onclick="showFullDocument()">View Full Document</a></p>
</div>

<div id="full-document" style="display:none; margin-top: 20px;">
  <pre style="white-space: pre-wrap;">{{ full_document }}</pre>
</div>

<form action="[webhook-url]" method="POST">
  <h3>Final Review</h3>

  <label>
    <input type="checkbox" name="accuracy_check" required>
    I have reviewed the document and confirm accuracy
  </label>

  <label>
    <input type="checkbox" name="completeness_check" required>
    Document covers all key criteria (technical + commercial analysis)
  </label>

  <h4>Action:</h4>
  <label>
    <input type="radio" name="decision" value="approved" required> Approve for "submission"
  </label>
  <label>
    <input type="radio" name="decision" value="edit"> Request edits
  </label>
  <label>
    <input type="radio" name="decision" value="regenerate"> Regenerate document
  </label>

  <label>
    Edit notes (if requesting changes): <textarea name="edit_notes"></textarea>
  </label>

  <button type="submit">Submit Decision</button>
</form>

<script>
  function showFullDocument() {
    document.getElementById('full-document').style.display = 'block';
  }
</script>
```

**After Wait node - Process decision:**
- **Switch** node:
  - If `decision === "approved"`: Save document and complete workflow
  - If `decision === "edit"`: Manual edit flow (save for user to edit externally)
  - If `decision === "regenerate"`: Loop back to document generation

**Why this matters:** This final checkpoint is the compliance gate - nothing leaves the system without explicit human approval.

---

## Phase 4: Save Final Output

### 4. Save approved document to workspace
When approved:

**Write Binary File** node or **HTTP Request** (to save file):
- Path: `your_workspace/your_workflows/research_analysis_experiment/outputs/use_case_analysis_{{ timestamp }}.md`
- Content: `{{ $json.full_document }}`

**Also save JSON version:**
- Path: `your_workspace/your_workflows/research_analysis_experiment/outputs/use_case_analysis_{{ timestamp }}.json`
- Content: Complete analysis data as JSON

**Update experiment log:**
- Append to: `your_workspace/your_workflows/research_analysis_experiment/experiment_log.md`
- Note: Date, query, number of papers, outcome (approved/rejected), time taken

**Why this matters:** Saved outputs are evidence of the workflow's value and can be shared with stakeholders.

---

## Phase 5: Complete Workflow Testing

### 5. Run end-to-end test
Execute the complete workflow from Step 3 → Step 6:

1. Search for papers (Checkpoint 1)
2. Approve papers
3. Analyze papers (Checkpoint 2)
4. Approve analyses
5. Generate document (Checkpoint 3)
6. Review and approve final document

**Validation checklist:**
- [ ] All 3 checkpoints block correctly
- [ ] State persists across all checkpoints
- [ ] Final document is well-formatted and complete
- [ ] Document accurately represents the analyses
- [ ] Workflow completes without errors

**Time tracking:**
- How long from start to finish?
- How much was automated vs manual review time?

**Why this matters:** This validates that all components work together seamlessly.

---

## Output Requirements

At the end of this step, create:

1. **n8n Workflow:** "Complete Research Analysis Workflow"
   - All 3 checkpoints implemented and tested
   - Outputs markdown + JSON documents
   - Saves to workspace automatically

2. **File:** `your_workspace/your_workflows/research_analysis_experiment/outputs/`
   - At least one complete use case document (markdown + JSON)
   - Demonstrates the workflow output quality

3. **File:** `your_workspace/your_workflows/research_analysis_experiment/workflow_test_results.md`
```markdown
# Complete Workflow Test Results

## End-to-End Test

**Test Query:** {{ query }}
**Date:** {{ date }}

### Checkpoint Performance
- **Checkpoint 1:** [✓ Working] - [Notes]
- **Checkpoint 2:** [✓ Working] - [Notes]
- **Checkpoint 3:** [✓ Working] - [Notes]

### Timing
- Total workflow time: {{ minutes }}
- Automated processing time: {{ minutes }}
- Manual review time: {{ minutes }}

### Output Quality
- **Document Completeness:** [1-10] - [Are all sections filled?]
- **Technical Accuracy:** [1-10] - [Does it correctly represent papers?]
- **Commercial Usefulness:** [1-10] - [Is it actionable for decision-makers?]

### Issues Encountered
- [List any problems and resolutions]

### Readiness for Step 7
- [ ] Workflow runs end-to-end without breaking
- [ ] All 3 checkpoints functional
- [ ] Output documents are useful quality
- [ ] Ready to test with 3 different queries

**Date Completed:** {{ date }}
**Time Spent:** {{ hours }}
```

---

## Instructions for the AI Assistant

- Ensure markdown formatting is clean and professional
- Help debug document generation code if output is malformed
- Validate that Checkpoint 3 properly displays the document
- If document quality is poor, help iterate on the template or generation logic
- Emphasize this is the "deliverable" - it should look polished
- Celebrate completion of the full workflow build!
- Prepare user for Step 7 (running multiple tests)
