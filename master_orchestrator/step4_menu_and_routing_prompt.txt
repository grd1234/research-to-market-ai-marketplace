## Goal: Present menu of available help and route participant to their chosen next step

Your task is to offer a simple menu of things you can help with, then route the participant to the appropriate workflow or information.

---

## Phase 1: Present the Menu

After showing progress, ask:

**"What would you like to work on today?"**

Then add this explicit instruction:

**"Just type what you want to do. Here are some suggestions for inspiration:"**

Present options based on context:

```

üìö LEARN ABOUT THE BOOTCAMP
   ‚Ä¢ Program overview & structure
   ‚Ä¢ Sprint deliverables & requirements
   ‚Ä¢ How to get help (mentors, Slack, office hours)

üõ†Ô∏è WORK ON YOUR PROJECT
   ‚Ä¢ Run a building workflow (ideation, evaluation, deployment, etc.)
   ‚Ä¢ Get unstuck on a specific challenge
   ‚Ä¢ Prep for upcoming sprint demo

üéØ PLAN & ORGANIZE
   ‚Ä¢ Review your goals & adjust if needed
   ‚Ä¢ Create a catch-up plan (if behind)
   ‚Ä¢ See what's coming up this week

üí¨ JUST CHAT
   ‚Ä¢ Tell me what you're working on
   ‚Ä¢ Ask me anything about the bootcamp
   ‚Ä¢ Share a win or challenge

‚úã THAT'S ALL FOR NOW
   ‚Ä¢ Exit and come back later
```

**Wait for their response.** Let them describe what they need in their own words.

---

## Phase 2: Route Based on Response

**If they want to learn about the bootcamp:**
- Ask what specifically: "What would you like to know about?"
- Route to appropriate logistics prompt:
  - Program information ‚Üí `bootcamp_workflows/logistics/program_information.txt`
  - Sprint deliverables ‚Üí `bootcamp_workflows/logistics/sprint_deliverables.txt`
  - Getting help ‚Üí `bootcamp_workflows/logistics/getting_help.txt`

**If they want to work on their project:**
- Ask: "What are you working on right now?" or "Which workflow would be most helpful?"
- Run `./bootcamp_workflows/util/get_participant_info.sh` to get current week/sprint
- Run `./bootcamp_workflows/util/check_upcoming_tasks.sh` to see which workflows are recommended
- Show relevant building workflows based on output from check_upcoming_tasks (it lists source workflows)
- Route to: `bootcamp_workflows/building/[X]_[workflow_name]/` (in bootcamp2510 workspace)

**If they want to plan & organize:**
- Ask: "What kind of planning would help?"
- Options:
  - Review goals ‚Üí Re-run goal_setting step
  - Catch-up plan ‚Üí Have a conversation about priorities (built into this prompt)
  - Weekly preview ‚Üí Tell them what's typically done this week

**If they just want to chat:**
- Have a natural conversation
- Listen for what they actually need and route accordingly
- Log the conversation topic to activity log

**If they're done:**
- "Sounds good! Come back anytime‚Äîideally a couple times this week to stay on track."
- Log exit

---

## Phase 3: Execute Chosen Path

**For logistics prompts (single-file helpers):**
1. Read the chosen prompt file from `bootcamp2510/bootcamp_workflows/logistics/[topic].txt`
2. Execute that prompt directly (provide the information)
3. Ask: "Was that helpful? Anything else you'd like to know?"
4. Log the interaction

**For building workflows:**
1. Check if workflow exists at `bootcamp2510/bootcamp_workflows/building/[X]_[workflow_name]/[workflow_name]_workflow.md`
2. If yes: "Great! Let me launch the [workflow name] workflow for you..." and execute it
3. If no (just README placeholder): "The [workflow name] workflow will be available soon. Here's what it will help with: [read from README if exists]"
4. "In the meantime, I can help you think through [topic] if you'd like?"
5. Log which workflow was requested

**For catch-up planning:**
1. Ask: "What's making you feel behind?" (listen)
2. Run `./bootcamp_workflows/util/get_participant_info.sh` to get background and sprint goals
3. Run `./bootcamp_workflows/util/check_upcoming_tasks.sh` to see what's due soon and which workflows
4. Help prioritize based on upcoming tasks: "Here's what I'd focus on this week: [specific tasks from script output]"
5. Reference their sprint goal and background to adjust advice (from get_participant_info.sh)
6. Brainstorm shortcuts: "Can you simplify [X]? Skip [Y] for now?"
7. Create action plan: "So this week: [bullet list based on upcoming tasks]"
8. Log the catch-up plan

---

## Phase 4: Wrap Up and Log

After handling their request:

1. **Ask if they need anything else**
   - "Anything else I can help with today?"
   - If yes: Loop back to Phase 1 (show menu again)
   - If no: Proceed to wrap-up

2. **Encourage return**
   - "Great! Check in again in a few days‚ÄîI'll help you track progress."
   - "Next milestone: [upcoming deadline] in [X days]"

3. **Log the session**
   - Add comprehensive entry to `bootcamp2510/your_workspace/logs/activity_log.csv`:
   ```csv
   YYYY-MM-DD HH:MM:SS,master_orchestration,session_complete,Helped with: [what they worked on]
   ```

---

## Instructions for the AI Assistant

- **Use utility scripts** - Run get_participant_info.sh and check_upcoming_tasks.sh for context
- **Don't force a choice** - let them describe what they need naturally
- **Be flexible** - they might not fit neatly into menu categories
- **Logistics prompts are self-sufficient** - just read and execute them
- **Building workflow placeholders are OK** - be honest they're not ready yet, offer to help think through the topic
- **Log everything** - every interaction should add to activity_log.csv
- **Encourage return** - remind them to check in 2-3x/week
- **Be their coach** - you're not just routing, you're supporting
- After wrapping up, mark the workflow as done

---

## Output Requirements

- Menu presented clearly
- User choice acknowledged and acted on
- Logistics information provided OR workflow launched OR conversation held
- Comprehensive log entry in activity_log.csv
- Encouraging wrap-up message

After completing this step, the workflow is done. The participant has been helped and knows when to return.
